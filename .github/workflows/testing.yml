name: Java CI with Maven in Linux

on:
  push:
    branches:
      - master
  pull_request:
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    name: Build with Java on Linux
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven and SonarCloud
      run: >
        xvfb-run mvn -f filmapp/pom.xml verify -Pjacoco,mutation-testing -DrepoToken=$COVERALLS_TOKEN coveralls:report
        sonar:sonar
        -Dsonar.organization=apt-project-repository
        -Dsonar.host.url=https://sonarcloud.io
        -Dsonar.projectKey=apt-project-repository_filmapp
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
    - name: Generate JUnit Report
      run: >
        mvn -f filmapp/pom.xml
        surefire-report:report-only site:site -DgenerateReports=false
      if: ${{ always() }}
    - name: Archive JUnit Report
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: surefire-report-jdk-17
        path: '**/target/site'
    